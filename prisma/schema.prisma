// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Simplified User model for MVP
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // White-label theming
  companyName    String?   // For agency branding
  primaryColor   String?   // Theme customization
  secondaryColor String?   // Theme customization
  logo           String?   // Logo URL

  conversations Conversation[]
  messages      Message[]
}

// Core chat functionality
model Conversation {
  id        String   @id @default(cuid())
  title     String?
  userId    String
  model     String   @default("openai/gpt-4-turbo-preview")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@index([userId])
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  userId         String
  role           MessageRole
  content        String
  model          String?
  tokens         Int?
  cost           Float?
  createdAt      DateTime @default(now())

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([conversationId])
  @@index([userId])
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
}

